package leson22.animals;

public class ZooApp {
    /*
    Два вида полиморфизма:
   1. Статистический полиморфизм времени компиляции
    Достигается он си помощью перегрузки методов. (Когда он в рамках одного класса существует несколько методов
    с одинаковым именем, но разным набором параметров)

    2. Динамический полиморфизм - полиморфизм времени выполнения
    Достигается он с помощью переопределения методов (method overriding)
    Позволяет подклассу или потомку предоставить специфическую реализацию метода
    который уже определен в его супер-классе (родителе)
    Переопределение методов происходит когда подкласс (потомок) предоставляет
    специфическую реализацию метода,который уже определен в его супер-классе (родителе)
     */
    public static void main(String[] args) {

        /*
        class Object
        Класс, от которого наследуется все классы в Java
        Он является корнем иерархии классов.
        Любой класс неявно наследуется от класса Object, если не указано иное
       ( Когда класс не расширяет явно другой класс,)
         он неявно наследуется от класса Object
         */
        Cat cat = new Cat();

        cat.eat();
        cat.voice();
        System.out.println(cat.toString());

        System.out.println("\n=========== Dog ================\n");
        Dog dog = new Dog();
        dog.voice();
        System.out.println(dog.toString());

        System.out.println("\n============= Hamsster ===============\n");

        Hamsster hamsster = new Hamsster();
        hamsster.voice();
        //Всегда, кода мы передаем в sout ссылку на объект
        // автоматически вызывается метод toString для получения строкового представления
        System.out.println(hamsster);

    }
}
